# db = postgresql.open('pq://postgres:postgres@localhost:5432/postgres')
# db.execute("CREATE TABLE screenshots (id SERIAL PRIMARY KEY, "
#                "image_path CHAR(64), screen_area CHAR(2), created_at TIMESTAMP DEFAULT NOW())")
# db = postgresql.open('pq://postgres:postgres@localhost:5432/postgres')
# db.execute("CREATE TABLE screen_coordinates (id SERIAL PRIMARY KEY, "
#                        "x_coordinate smallint,y_coordinate smallint,width smallint,height smallint, screen_area smallint, created_at TIMESTAMP DEFAULT NOW())")

проверяем, если поле current_action(последней строки, соответсвующая область экрана) is not null
ищем на скрине свои карты
определяем ценность руки
ищем кнопку
совершаем действие
вставляем в таблицу текущу руку и действие, которое совершили

todo
получить миниатюры всех(52) карт

import cv2
import numpy as np

img_rgb = cv2.imread('mario.jpg') #скрин
img_gray = cv2.cvtColor(img_rgb, cv2.COLOR_BGR2GRAY)
template = cv2.imread('mario_template3.jpg',0) #искомый объект
w, h = template.shape[::-1]

res = cv2.matchTemplate(img_gray,template,cv2.TM_CCOEFF_NORMED)
threshold = 0.8
loc = np.where( res >= threshold)
for pt in zip(*loc[::-1]):
    cv2.rectangle(img_rgb, pt, (pt[0] + w, pt[1] + h), (0,255,0), 2)

cv2.imwrite('res.png',img_rgb)